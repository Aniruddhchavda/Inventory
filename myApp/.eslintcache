[{"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\index.js":"1","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\App.js":"2","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\reportWebVitals.js":"3","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Home.js":"4","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Navigation.js":"5","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\inventory.js":"6","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\EditInvModal.js":"7","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\AddInvModal.js":"8","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\SurplusModal.js":"9","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\EditSurplusModal.js":"10","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scan.js":"11","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scanner.jsx":"12","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Result.jsx":"13","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\Surplus.js":"14","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\index.js":"15","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\reportWebVitals.js":"16","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\App.js":"17","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Home.js":"18","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scan.js":"19","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\Surplus.js":"20","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\inventory.js":"21","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\SurplusModal.js":"22","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\EditSurplusModal.js":"23","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\AddInvModal.js":"24","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\EditInvModal.js":"25","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scanner.jsx":"26","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Result.jsx":"27","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Navigation\\Navigation.js":"28","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Certification\\certification.js":"29"},{"size":500,"mtime":1609056469000,"results":"30","hashOfConfig":"31"},{"size":790,"mtime":1623230929677,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1609056469000,"results":"33","hashOfConfig":"31"},{"size":242,"mtime":1609056469000,"results":"34","hashOfConfig":"31"},{"size":1339,"mtime":1623162694339,"results":"35","hashOfConfig":"31"},{"size":5820,"mtime":1623238412373,"results":"36","hashOfConfig":"31"},{"size":8400,"mtime":1623242154530,"results":"37","hashOfConfig":"31"},{"size":6882,"mtime":1623241361437,"results":"38","hashOfConfig":"31"},{"size":8283,"mtime":1623240395492,"results":"39","hashOfConfig":"31"},{"size":3668,"mtime":1623231902741,"results":"40","hashOfConfig":"31"},{"size":847,"mtime":1623230721064,"results":"41","hashOfConfig":"31"},{"size":970,"mtime":1623230710788,"results":"42","hashOfConfig":"31"},{"size":322,"mtime":1623230714667,"results":"43","hashOfConfig":"31"},{"size":2866,"mtime":1623232268860,"results":"44","hashOfConfig":"31"},{"size":500,"mtime":1623654163686,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1609056469000,"results":"47","hashOfConfig":"46"},{"size":1117,"mtime":1624355888415,"results":"48","hashOfConfig":"46"},{"size":242,"mtime":1609056469000,"results":"49","hashOfConfig":"46"},{"size":847,"mtime":1623230721064,"results":"50","hashOfConfig":"46"},{"size":2866,"mtime":1623232268860,"results":"51","hashOfConfig":"46"},{"size":12422,"mtime":1624355183097,"results":"52","hashOfConfig":"46"},{"size":8508,"mtime":1623920573997,"results":"53","hashOfConfig":"46"},{"size":3668,"mtime":1623231902741,"results":"54","hashOfConfig":"46"},{"size":7222,"mtime":1623933123441,"results":"55","hashOfConfig":"46"},{"size":9061,"mtime":1624275233262,"results":"56","hashOfConfig":"46"},{"size":970,"mtime":1623230710788,"results":"57","hashOfConfig":"46"},{"size":322,"mtime":1623230714667,"results":"58","hashOfConfig":"46"},{"size":1745,"mtime":1624273177719,"results":"59","hashOfConfig":"46"},{"size":5309,"mtime":1624355445180,"results":"60","hashOfConfig":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"eboh4g",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"1u2gzwp",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\index.js",[],["132","133"],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\App.js",["134"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {Home} from './Home';\nimport {Inventory} from './inventory/inventory';\nimport {Surplus} from './surplus//Surplus';\nimport {Navigation} from './Navigation';\nimport {Scan} from './scan/Scan';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n     <h3 className=\"m-3 d-flex justify-content-center\">\n       INVENTORY\n     </h3>\n\n     <Navigation/>\n\n     <Switch>\n       <Route path='/' component={Home} exact/>\n       <Route path='/inventory' component={Inventory}/>\n       <Route path='/surplus' component={Surplus}/>\n       <Route path='/scan' component={Scan}/>\n     </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\reportWebVitals.js",[],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Home.js",[],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Navigation.js",["135"],"import React,{Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {Navbar,Nav} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport class Navigation extends Component{\n\n    render(){\n        return(\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                \n            <Navbar.Brand href=\"/\">\n                 <img\n                 alt=\"\"\n                 src=\"assets/ttus.png\"\n                width=\"400\"\n                height=\"50\"\n             />\n            </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\">\n                    Home\n                </NavLink>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/inventory\">\n                    Inventory\n                </NavLink>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/surplus\">\n                    Surplus\n                </NavLink>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/scan\">\n                    Scan\n                </NavLink>\n                \n                </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\inventory.js",[],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\EditInvModal.js",["136"],"import React,{Component} from 'react';\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nexport class EditInvModal extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch(url+'inventory',{\n            method:'PUT',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                InventoryID:event.target.InventoryID.value,\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongsTo:event.target.BelongsTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert(error);\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Inventory\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"InventoryID\" >\n                        <Form.Label>Inventory ID</Form.Label>\n                        <Form.Control type=\"text\" name=\"InventoryID\" required disabled\n                        defaultValue={this.props.InventoryID}\n                        placeholder={this.props.InventoryID}/>\n                    </Form.Group>\n\n                <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required \n                        defaultValue={this.props.TagNumber}\n                        placeholder={this.props.Tagnumber}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required \n                        defaultValue={this.props.SerialNumber}\n                        placeholder={this.props.SerialNumber}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required \n                        defaultValue={this.props.Make}\n                        placeholder={this.props.Make}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required \n                        defaultValue={this.props.Model}\n                        placeholder={this.props.Model}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required \n                        defaultValue={this.props.Description}\n                        placeholder={this.props.Description}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"BelongsTo\">\n                        <Form.Label>BelongsTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required \n                        defaultValue={this.props.BelongsTo}\n                        placeholder={this.props.BelongsTo}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required \n                        defaultValue={this.props.Room}\n                        placeholder={this.props.Room}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control type=\"text\" name=\"Missing\" required \n                        defaultValue={this.props.Missing}\n                        placeholder={this.props.Missing}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"text\" name=\"DateAcquired\" required \n                        defaultValue={this.props.DateAcquired}\n                        placeholder={this.props.DateAcquired}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        defaultValue={this.props.Cost}\n                        placeholder={this.props.Cost}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>PO</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        defaultValue={this.props.PO}\n                        placeholder={this.props.PO}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        defaultValue={this.props.Type}\n                        placeholder={this.props.Type}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        defaultValue={this.props.OriginalTag}\n                        placeholder={this.props.OriginalTag}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Condition}\n                        placeholder={this.props.Condition}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document Upload</Form.Label>\n                        <Form.Control type=\"text\" name=\"Doc\" required \n                        defaultValue={this.props.Doc}\n                        placeholder={this.props.Doc}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Update Inventory\n                        </Button>\n                    </Form.Group>\n                </Form>\n           \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\AddInvModal.js",["137"],"import React,{Component} from 'react';\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nexport class AddInvModal extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch(url+'inventory',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongsTo:event.target.BelongsTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Inventory\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required \n                        placeholder=\"TagNumber\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required \n                        placeholder=\"SerialNumber\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required \n                        placeholder=\"Make\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required \n                        placeholder=\"Model\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required \n                        placeholder=\"Description\"/>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"BelongsTo\">\n                        <Form.Label>BelongsTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required \n                        placeholder=\"BelongsTo\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required \n                        placeholder=\"Room\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control type=\"text\" name=\"Missing\" required \n                        placeholder=\"Missing\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"text\" name=\"DateAcquired\" required \n                        placeholder=\"DateAcquired\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        placeholder=\"Cost\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>Purchase Order</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        placeholder=\"PO\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        placeholder=\"Type\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        placeholder=\"OriginalTag\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        placeholder=\"Condition\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document Upload</Form.Label>\n                        <Form.Control type=\"text\" name=\"Doc\" required \n                        placeholder=\"Doc\"/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Add Inventory\n                        </Button>\n                    </Form.Group>\n                </Form>\n         \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\SurplusModal.js",["138"],"import React,{Component} from 'react';\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nexport class SurplusModal extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch(url+'surplus',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongedTo:event.target.BelongedTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n\n        fetch(url+'inventory/'+this.props.InventoryID,{\n            method:'DELETE',\n            header:{'Accept':'application/json',\n        'Content-Type':'application/json'}\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Move to Surplus\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n        \n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required \n                        defaultValue={this.props.TagNumber}\n                        placeholder={this.props.Tagnumber}/>\n                </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required \n                        defaultValue={this.props.SerialNumber}\n                        placeholder={this.props.SerialNumber}/>\n                    </Form.Group>\n              \n           \n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required \n                        defaultValue={this.props.Make}\n                        placeholder={this.props.Make}/>\n                    </Form.Group>\n                </Form.Row>\n\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required \n                        defaultValue={this.props.Model}\n                        placeholder={this.props.Model}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required \n                        defaultValue={this.props.Description}\n                        placeholder={this.props.Description}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"BelongedTo\">\n                        <Form.Label>BelongedTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required \n                        defaultValue={this.props.BelongsTo}\n                        placeholder={this.props.BelongsTo}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required \n                        defaultValue={this.props.Room}\n                        placeholder={this.props.Room}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control type=\"text\" name=\"Missing\" required \n                        defaultValue={this.props.Missing}\n                        placeholder={this.props.Missing}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"text\" name=\"DateAcquired\" required \n                        defaultValue={this.props.DateAcquired}\n                        placeholder={this.props.DateAcquired}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        defaultValue={this.props.Cost}\n                        placeholder={this.props.Cost}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>PO</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        defaultValue={this.props.PO}\n                        placeholder={this.props.PO}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        defaultValue={this.props.Type}\n                        placeholder={this.props.Type}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        defaultValue={this.props.OriginalTag}\n                        placeholder={this.props.OriginalTag}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Condition}\n                        placeholder={this.props.Condition}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Doc}\n                        placeholder={this.props.Doc}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Move to Surplus\n                        </Button>\n                    </Form.Group>\n                </Form>\n            \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\EditSurplusModal.js",[],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scan.js",["139"],"import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Scanner from './Scanner'\nimport Result from './Result'\n\nexport class Scan extends Component {\n  state = {\n    scanning: false,\n    results: [],\n  }\n\n  _scan = () => {\n    this.setState({ scanning: !this.state.scanning })\n  }\n\n  _onDetected = result => {\n    this.setState({ results: this.state.results.concat([result]) })\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this._scan}>\n          {this.state.scanning ? 'Stop' : 'Start'}\n        </button>\n        <ul className=\"results\">\n          {this.state.results.map((result, i) => (\n            <Result key={result.codeResult.code + i} result={result} />\n          ))}\n        </ul>\n        {this.state.scanning ? <Scanner onDetected={this._onDetected} /> : null}\n      </div>\n    )\n  }\n}\n\n\n\n\n","C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scanner.jsx",[],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Result.jsx",[],["140","141"],"C:\\Users\\anich\\Desktop\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\Surplus.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\index.js",[],["142","143"],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\reportWebVitals.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\App.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Home.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scan.js",["144"],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\Surplus.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\inventory.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\SurplusModal.js",["166"],"import React,{Component} from 'react';\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nconst missing = ['M','MI','N'];\n\nexport class SurplusModal extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        fetch(url+'surplus',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongedTo:event.target.BelongedTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n\n        fetch(url+'inventory/'+this.props.InventoryID,{\n            method:'DELETE',\n            header:{'Accept':'application/json',\n        'Content-Type':'application/json'}\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Move to Surplus\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n        \n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required \n                        defaultValue={this.props.TagNumber}\n                        placeholder={this.props.Tagnumber}/>\n                </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required \n                        defaultValue={this.props.SerialNumber}\n                        placeholder={this.props.SerialNumber}/>\n                    </Form.Group>\n              \n           \n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required \n                        defaultValue={this.props.Make}\n                        placeholder={this.props.Make}/>\n                    </Form.Group>\n                </Form.Row>\n\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required \n                        defaultValue={this.props.Model}\n                        placeholder={this.props.Model}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required \n                        defaultValue={this.props.Description}\n                        placeholder={this.props.Description}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"BelongedTo\">\n                        <Form.Label>BelongedTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required \n                        defaultValue={this.props.BelongsTo}\n                        placeholder={this.props.BelongsTo}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required \n                        defaultValue={this.props.Room}\n                        placeholder={this.props.Room}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control\n                         required\n                         type=\"text\"\n                         name=\"Missing\"\n                         as=\"select\"\n                         >\n                          {missing.map(miss => (\n                         <option key={miss}>{miss}</option>\n                      ))}\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"date\" name=\"DateAcquired\" required \n                        defaultValue={this.props.DateAcquired}\n                        placeholder={this.props.DateAcquired}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        defaultValue={this.props.Cost}\n                        placeholder={this.props.Cost}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>PO</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        defaultValue={this.props.PO}\n                        placeholder={this.props.PO}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        defaultValue={this.props.Type}\n                        placeholder={this.props.Type}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        defaultValue={this.props.OriginalTag}\n                        placeholder={this.props.OriginalTag}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Condition}\n                        placeholder={this.props.Condition}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Doc}\n                        placeholder={this.props.Doc}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Move to Surplus\n                        </Button>\n                    </Form.Group>\n                </Form>\n            \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\surplus\\EditSurplusModal.js",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\AddInvModal.js",["167"],"import React,{Component} from 'react';\nimport {Modal,Button, Row, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nconst missing = ['M','MI','N'];\n\n\nexport class AddInvModal extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    \n\n    handleSubmit(event){\n\n        event.preventDefault();\n        fetch(url+'inventory',{\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongsTo:event.target.BelongsTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert('Failed');\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Inventory\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required\n                        placeholder=\"TagNumber\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required\n                        placeholder=\"SerialNumber\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required\n                        placeholder=\"Make\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required\n                        placeholder=\"Model\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required\n                        placeholder=\"Description\"/>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"BelongsTo\">\n                        <Form.Label>BelongsTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required\n                        placeholder=\"BelongsTo\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required\n                        placeholder=\"Room\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control\n                         required\n                         type=\"text\"\n                         name=\"Missing\"\n                         as=\"select\"\n                         defaultValue=\"M\"\n                         >\n                          {missing.map(miss => (\n                         <option key={miss}>{miss}</option>\n                      ))}\n                    </Form.Control>\n                    </Form.Group>\n\n\n\n\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"date\" name=\"DateAcquired\" required \n                        placeholder=\"DateAcquired\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        placeholder=\"Cost\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>Purchase Order</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        placeholder=\"PO\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        placeholder=\"Type\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        placeholder=\"OriginalTag\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        placeholder=\"Condition\"/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document Upload</Form.Label>\n                        <Form.Control type=\"text\" name=\"Doc\" required \n                        placeholder=\"Doc\"/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Add Inventory\n                        </Button>\n                    </Form.Group>\n                </Form>\n         \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\inventory\\EditInvModal.js",["168","169","170","171","172"],"import React from 'react';\nimport {Modal,Button, Alert, Col, Form} from 'react-bootstrap';\nlet url='http://localhost:53535/api/';\n\nconst missing = ['M','MI','N'];\n\nlet isLoggedIn = false;\n\n\nexport class EditInvModal extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n\n\n    handleSubmit(event){\n        event.preventDefault();\n\n\n        fetch(url+'inventory',{\n            method:'PUT',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                InventoryID:event.target.InventoryID.value,\n                TagNumber:event.target.TagNumber.value,\n                SerialNumber:event.target.SerialNumber.value,\n                Make:event.target.Make.value,\n                Model:event.target.Model.value,\n                Description:event.target.Description.value,\n                BelongsTo:event.target.BelongsTo.value,\n                Room:event.target.Room.value,\n                Missing:event.target.Missing.value,\n                DateAcquired:event.target.DateAcquired.value,\n                Cost:event.target.Cost.value,\n                PO:event.target.PO.value,\n                Doc:event.target.Doc.value,\n                Type:event.target.Type.value,\n                OriginalTag:event.target.OriginalTag.value,\n                Condition:event.target.Condition.value\n            })\n        })\n        .then(res=>res.json())\n        .then((result)=>{\n            alert(result);\n        },\n        (error)=>{\n            alert(error);\n        })\n    }\n    render(){\n        return (\n            <div className=\"container\">\n\n<Modal\n{...this.props}\nsize=\"lg\"\naria-labelledby=\"contained-modal-title-vcenter\"\ncentered\n>\n    <Modal.Header clooseButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n        {!this.props.isLoggedIn && \"View Inventory\" || \n        this.props.isLoggedIn && \"Edit Inventory\"}\n        </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"InventoryID\" >\n                        <Form.Label>Inventory ID</Form.Label>\n                        <Form.Control type=\"text\" name=\"InventoryID\" required disabled\n                        defaultValue={this.props.InventoryID}\n                        placeholder={this.props.InventoryID}/>\n                    </Form.Group>\n\n                <Form.Group as={Col} controlId=\"TagNumber\">\n                        <Form.Label>Tag Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"TagNumber\" required \n                        defaultValue={this.props.TagNumber}\n                        placeholder={this.props.Tagnumber}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"SerialNumber\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <Form.Control type=\"text\" name=\"SerialNumber\" required \n                        defaultValue={this.props.SerialNumber}\n                        placeholder={this.props.SerialNumber}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Make\">\n                        <Form.Label>Make</Form.Label>\n                        <Form.Control type=\"text\" name=\"Make\" required \n                        defaultValue={this.props.Make}\n                        placeholder={this.props.Make}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control type=\"text\" name=\"Model\" required \n                        defaultValue={this.props.Model}\n                        placeholder={this.props.Model}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" name=\"Description\" required \n                        defaultValue={this.props.Description}\n                        placeholder={this.props.Description}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"BelongsTo\">\n                        <Form.Label>BelongsTo</Form.Label>\n                        <Form.Control type=\"text\" name=\"BelongsTo\" required \n                        defaultValue={this.props.BelongsTo}\n                        placeholder={this.props.BelongsTo}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Room\">\n                        <Form.Label>Room</Form.Label>\n                        <Form.Control type=\"text\" name=\"Room\" required \n                        defaultValue={this.props.Room}\n                        placeholder={this.props.Room}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Missing\">\n                        <Form.Label>Missing</Form.Label>\n                        <Form.Control\n                         required\n                         type=\"text\"\n                         name=\"Missing\"\n                         as=\"select\"\n                         >\n                          {missing.map(miss => (\n                         <option key={miss}>{miss}</option>\n                      ))}\n                    </Form.Control>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"DateAcquired\">\n                        <Form.Label>DateAcquired</Form.Label>\n                        <Form.Control type=\"date\" name=\"DateAcquired\" required \n                        defaultValue={this.props.DateAcquired}\n                        placeholder={this.props.DateAcquired}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Cost\">\n                        <Form.Label>Cost</Form.Label>\n                        <Form.Control type=\"text\" name=\"Cost\" required \n                        defaultValue={this.props.Cost}\n                        placeholder={this.props.Cost}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"PO\">\n                        <Form.Label>PO</Form.Label>\n                        <Form.Control type=\"text\" name=\"PO\" required \n                        defaultValue={this.props.PO}\n                        placeholder={this.props.PO}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Type\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control type=\"text\" name=\"Type\" required \n                        defaultValue={this.props.Type}\n                        placeholder={this.props.Type}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"OriginalTag\">\n                        <Form.Label>OriginalTag</Form.Label>\n                        <Form.Control type=\"text\" name=\"OriginalTag\" required \n                        defaultValue={this.props.OriginalTag}\n                        placeholder={this.props.OriginalTag}/>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Condition\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control type=\"text\" name=\"Condition\" required \n                        defaultValue={this.props.Condition}\n                        placeholder={this.props.Condition}/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"Doc\">\n                        <Form.Label>Document Upload</Form.Label>\n                        <Form.Control type=\"text\" name=\"Doc\" required \n                        defaultValue={this.props.Doc}\n                        placeholder={this.props.Doc}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        {this.props.isLoggedIn && \n                        <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide}>\n                            Update Inventory\n                        </Button>\n                        }\n                        {!this.props.isLoggedIn && \n                        <Alert key=\"1\" variant=\"danger\">\n                            Only Admins Can Make Changes.\n                        </Alert>\n                        }\n                        \n                    </Form.Group>\n                </Form>\n           \n    </Modal.Body>\n    \n    <Modal.Footer>\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n    </Modal.Footer>\n\n</Modal>\n\n            </div>\n        )\n    }\n\n}","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Scanner.jsx",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\scan\\Result.jsx",[],"C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Navigation\\Navigation.js",["173","174"],"import React,{Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {Navbar,Nav,Button} from 'react-bootstrap';\n\nlet url='http://localhost:53535/api/';\n\n\nexport class Navigation extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          isCertificationOn: this.props.isCertificationOn\n        };\n      }\n\n    render(){\n        return(\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\n                \n            <Navbar.Brand href=\"/\">\n                 <img\n                 alt=\"\"\n                 src=\"assets/ttus.png\"\n                width=\"400\"\n                height=\"50\"\n             />\n            </Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\">\n                    Home\n                </NavLink>\n               \n                {this.state.isCertificationOn &&\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/certification\">\n                    Certification\n                </NavLink>\n                }\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/inventory\">\n                    Inventory\n                </NavLink>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/surplus\">\n                    Surplus\n                </NavLink>\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/scan\">\n                    Scan\n                </NavLink>\n                </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}","C:\\Users\\anich\\Desktop\\Project2\\Inventory\\TTUS\\ReactJsCoreApi-main\\myApp\\src\\Certification\\certification.js",["175","176","177","178","179","180","181","182","183","184","185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":12},{"ruleId":"190","severity":1,"message":"194","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"195","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"196","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"186","replacedBy":"197"},{"ruleId":"188","replacedBy":"198"},{"ruleId":"186","replacedBy":"199"},{"ruleId":"188","replacedBy":"200"},{"ruleId":"190","severity":1,"message":"196","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"201","line":6,"column":30,"nodeType":"192","messageId":"193","endLine":6,"endColumn":42},{"ruleId":"190","severity":1,"message":"202","line":49,"column":10,"nodeType":"192","messageId":"193","endLine":49,"endColumn":20},{"ruleId":"190","severity":1,"message":"202","line":59,"column":10,"nodeType":"192","messageId":"193","endLine":59,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":157,"column":19,"nodeType":"205","messageId":"206","endLine":157,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":157,"column":25,"nodeType":"209","messageId":"210","endLine":157,"endColumn":27},{"ruleId":"207","severity":1,"message":"208","line":157,"column":38,"nodeType":"209","messageId":"210","endLine":157,"endColumn":40},{"ruleId":"207","severity":1,"message":"211","line":157,"column":38,"nodeType":"209","messageId":"210","endLine":157,"endColumn":40},{"ruleId":"203","severity":1,"message":"204","line":158,"column":18,"nodeType":"205","messageId":"206","endLine":158,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":158,"column":24,"nodeType":"209","messageId":"210","endLine":158,"endColumn":26},{"ruleId":"207","severity":1,"message":"211","line":158,"column":41,"nodeType":"209","messageId":"210","endLine":158,"endColumn":43},{"ruleId":"203","severity":1,"message":"204","line":159,"column":18,"nodeType":"205","messageId":"206","endLine":159,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":159,"column":25,"nodeType":"209","messageId":"210","endLine":159,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":377,"column":41,"nodeType":"205","messageId":"206","endLine":377,"endColumn":43},{"ruleId":"207","severity":1,"message":"208","line":377,"column":54,"nodeType":"209","messageId":"210","endLine":377,"endColumn":56},{"ruleId":"207","severity":1,"message":"208","line":377,"column":67,"nodeType":"209","messageId":"210","endLine":377,"endColumn":69},{"ruleId":"207","severity":1,"message":"211","line":377,"column":67,"nodeType":"209","messageId":"210","endLine":377,"endColumn":69},{"ruleId":"203","severity":1,"message":"204","line":378,"column":40,"nodeType":"205","messageId":"206","endLine":378,"endColumn":42},{"ruleId":"207","severity":1,"message":"211","line":378,"column":52,"nodeType":"209","messageId":"210","endLine":378,"endColumn":54},{"ruleId":"207","severity":1,"message":"211","line":378,"column":65,"nodeType":"209","messageId":"210","endLine":378,"endColumn":67},{"ruleId":"203","severity":1,"message":"204","line":379,"column":40,"nodeType":"205","messageId":"206","endLine":379,"endColumn":42},{"ruleId":"207","severity":1,"message":"211","line":379,"column":52,"nodeType":"209","messageId":"210","endLine":379,"endColumn":54},{"ruleId":"190","severity":1,"message":"195","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"195","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"202","line":7,"column":5,"nodeType":"192","messageId":"193","endLine":7,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":69,"column":33,"nodeType":"209","messageId":"210","endLine":69,"endColumn":35},{"ruleId":"207","severity":1,"message":"208","line":69,"column":53,"nodeType":"209","messageId":"210","endLine":69,"endColumn":55},{"ruleId":"207","severity":1,"message":"211","line":69,"column":53,"nodeType":"209","messageId":"210","endLine":69,"endColumn":55},{"ruleId":"207","severity":1,"message":"211","line":70,"column":31,"nodeType":"209","messageId":"210","endLine":70,"endColumn":33},{"ruleId":"190","severity":1,"message":"212","line":3,"column":20,"nodeType":"192","messageId":"193","endLine":3,"endColumn":26},{"ruleId":"190","severity":1,"message":"213","line":5,"column":5,"nodeType":"192","messageId":"193","endLine":5,"endColumn":8},{"ruleId":"190","severity":1,"message":"214","line":6,"column":16,"nodeType":"192","messageId":"193","endLine":6,"endColumn":29},{"ruleId":"190","severity":1,"message":"201","line":6,"column":30,"nodeType":"192","messageId":"193","endLine":6,"endColumn":42},{"ruleId":"203","severity":1,"message":"204","line":116,"column":27,"nodeType":"205","messageId":"206","endLine":116,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":116,"column":40,"nodeType":"209","messageId":"210","endLine":116,"endColumn":42},{"ruleId":"207","severity":1,"message":"208","line":116,"column":53,"nodeType":"209","messageId":"210","endLine":116,"endColumn":55},{"ruleId":"207","severity":1,"message":"211","line":116,"column":53,"nodeType":"209","messageId":"210","endLine":116,"endColumn":55},{"ruleId":"203","severity":1,"message":"204","line":117,"column":26,"nodeType":"205","messageId":"206","endLine":117,"endColumn":28},{"ruleId":"207","severity":1,"message":"211","line":117,"column":38,"nodeType":"209","messageId":"210","endLine":117,"endColumn":40},{"ruleId":"207","severity":1,"message":"211","line":117,"column":51,"nodeType":"209","messageId":"210","endLine":117,"endColumn":53},{"ruleId":"203","severity":1,"message":"204","line":118,"column":26,"nodeType":"205","messageId":"206","endLine":118,"endColumn":28},{"ruleId":"207","severity":1,"message":"211","line":118,"column":38,"nodeType":"209","messageId":"210","endLine":118,"endColumn":40},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'Row' is defined but never used.","'ReactDOM' is defined but never used.",["215"],["216"],["215"],["216"],"'ToggleButton' is defined but never used.","'isLoggedIn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'Button' is defined but never used.","'url' is assigned a value but never used.","'ButtonToolbar' is defined but never used.","no-global-assign","no-unsafe-negation"]